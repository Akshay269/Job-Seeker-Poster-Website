datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  role          Role
  name          String?
  companyName   String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  jobs          Job[]          @relation("JobPoster")
  applications  Application[]  @relation("Applicant")
  drafts        Draft[]        
}

model Job {
  id              String         @id @default(uuid())
  title           String
  companyName     String?
  location        String
  salaryRange     String?
  jobType         String?        // e.g., Full-time, Internship
  workType        String?        // e.g., Remote, On-site
  experienceLevel String?        // e.g., Entry, Mid, Senior
  description     String
  requirements    String?
  skills          String?
  benefits        String?
  contactEmail    String?
  companyWebsite  String?
  deadline        DateTime?

  postedBy        User           @relation("JobPoster", fields: [postedById], references: [id])
  postedById      String

  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  applications    Application[]
  drafts          Draft[]        
  status          JobStatus      @default(ACTIVE)
}

model Application {
  id             String             @id @default(uuid())
  appliedAt      DateTime           @default(now())
  status         ApplicationStatus  @default(PENDING_REVIEW)

  jobId          String
  job            Job                @relation(fields: [jobId], references: [id])
  applicantId    String
  applicant      User               @relation("Applicant", fields: [applicantId], references: [id])

  personalInfo   Json
  contactInfo    Json
  experiences    Json
  educations     Json
  skills         Json
  certifications Json?
  languages      String[]
  resume         String
  coverLetter    String?
  portfolio      String?
  otherFiles     String[]           @default([])
}

model Draft {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  job       Job      @relation(fields: [jobId], references: [id])
  jobId     String
  data      Json
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  APPLICANT
}

enum JobStatus {
  ACTIVE
  INACTIVE
}

enum ApplicationStatus {
  PENDING_REVIEW
  SHORTLISTED
  INTERVIEW_SCHEDULED
  REJECTED
}
