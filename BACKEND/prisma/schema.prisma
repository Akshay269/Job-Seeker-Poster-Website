datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  role          Role
  name          String?
  companyName   String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  jobs          Job[]          @relation("JobPoster")
  applications  Application[]  @relation("Applicant")
}

model Job {
  id              String         @id @default(uuid())
  title           String
  companyName     String?
  location        String
  salaryRange     String?
  jobType         String?        // e.g., Full-time, Internship
  workType        String?        // e.g., Remote, On-site
  experienceLevel String?        // e.g., Entry, Mid, Senior
  description     String
  requirements    String?
  skills          String?
  benefits        String?
  contactEmail    String?
  companyWebsite  String?
  deadline        DateTime?

  postedBy        User           @relation("JobPoster", fields: [postedById], references: [id])
  postedById      String

  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  applications    Application[]
  status        JobStatus      @default(ACTIVE)
}

model Application {
  id             String     @id @default(uuid())
  appliedAt      DateTime   @default(now())
  status         ApplicationStatus @default(PENDING_REVIEW)

  // Relations
  jobId          String
  job            Job        @relation(fields: [jobId], references: [id])
  applicantId    String
  applicant      User       @relation("Applicant", fields: [applicantId], references: [id])

  // Personal Info
  personalInfo   Json       // { fullName, dateOfBirth, gender, summary, country }

  // Contact Info
  contactInfo    Json       // { email, phone, address, city, state, zip, linkedIn, portfolio, country }

  // Experience (array of jobs)
  experiences    Json       // [ { jobTitle, company, startDate, endDate, isCurrent, description } ]

  // Education
  educations     Json       // [ { degree, fieldOfStudy, institution, graduationYear, gpa } ]

  // Skills
  skills         Json       // [ { name, level } ]

  // Certifications
  certifications Json?      // [ { name, issuer, year } ]

  // Languages
  languages      String[]   // simple string array

  // Documents as URLs
  resume         String     // required URL to resume
  coverLetter    String?    // optional URL
  portfolio      String?    // optional URL
  otherFiles     String[]     @default([])// array of additional document URLs
}



enum Role {
  ADMIN
  APPLICANT
}
enum JobStatus {
  ACTIVE
  INACTIVE
}

enum ApplicationStatus {
  PENDING_REVIEW
  SHORTLISTED
  INTERVIEW_SCHEDULED
  REJECTED
  HIRED
}
